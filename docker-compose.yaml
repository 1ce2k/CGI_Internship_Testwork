version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: flight-planning-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: flightdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources:/docker-entrypoint-initdb.d
    networks:
      - flight-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    image: dpage/pgadmin4
    container_name: flight-planning-pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - flight-network

  gradle:
    image: gradle:8.7-jdk-21-and-22
    container_name: flight-planning-gradle
    volumes:
      - .:/app
      - gradle-cache:/home/gradle/.gradle
    working_dir: /app
    command:
      - gradle clean build --no-daemon
    networks:
      - flight-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flight-planning-app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/flightdb"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "postgres"
    networks:
      - flight-network
    restart: unless-stopped


networks:
  flight-network:
    driver: bridge

volumes:
  postgres-data:
  gradle-cache:
